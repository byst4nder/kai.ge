<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>凯哥的个人网站</title>
    <link>https://kai.ge/</link>
    <description>Recent content on 凯哥的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 14 Aug 2019 20:20:22 +0800</lastBuildDate>
    
	<atom:link href="https://kai.ge/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vuex概念浓缩版记录</title>
      <link>https://kai.ge/posts/vuex%E6%A6%82%E5%BF%B5%E6%B5%93%E7%BC%A9%E7%89%88%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 14 Aug 2019 20:20:22 +0800</pubDate>
      
      <guid>https://kai.ge/posts/vuex%E6%A6%82%E5%BF%B5%E6%B5%93%E7%BC%A9%E7%89%88%E8%AE%B0%E5%BD%95/</guid>
      <description>state 读取store的字段值,通过this.$store.state访问 const Counter = { template: `&amp;lt;div&amp;gt;{{ count }}&amp;lt;/div&amp;gt;`, computed: { count () { return this.$store.state.count } } } mapState 辅助函数 当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。为了解决这</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://kai.ge/about/</link>
      <pubDate>Sat, 29 Dec 2018 20:24:28 +0800</pubDate>
      
      <guid>https://kai.ge/about/</guid>
      <description>Hugo 官方主页: https://gohugo.io/ Hugo的安装方式有两种，一种是直接下载编译好的Hugo二进制文件。如果只是使用Hugo推荐用这种方式。另一种方式是获取Hugo的源码，自己编译。由于各种不可预料的网络问题，第二种方式不</description>
    </item>
    
  </channel>
</rss>